% function number = RdVHDL(file, n, m)
%
% Lee el fichero "file" con formato VHDL de 1 unica columna 
% de 'n' bits enteros y 'm' bits fraccionarios, y lo asigna 
% a la variable "number"
%

function number = RdVHDL(file, n, m)

binNum = [];
fid = fopen([file],'r');
binNum = fgets(fid);
while ~(feof(fid)), 
  binNum = [binNum; fgets(fid)];
end;
fclose(fid);

size_binNum = size(binNum);

number = [];
for i=1:size_binNum(1),
  string = binNum(i,:);
  DecNum=0;

  if (string(1)=='1')
    DecNum=-pow2(n-1);               % Para incluir el complemento a 2.
  end;
  for j=2:length(string)-1
    digito = str2num(string(j))     % Convierte de cadena a numero.
    DecNum = (pow2(n-j)*digito) + DecNum
    j = j+1
  end;
  number = [number; DecNum];
end;

